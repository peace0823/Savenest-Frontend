name: Deploy Frontend to AWS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy Frontend via Terraform + S3 + CloudFront
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      TF_VERSION: 1.4.0
      NODE_VERSION: 18

    steps:
      # 1. Checkout to GitHub repository
      - name: Checkout to GitHub repository
        uses: actions/checkout@v4

      # 2. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 3. Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      # 4. Run Terraform
      - name: Format Terraform Files (recursive)
        run: terraform fmt -recursive
             
      - name: Terraform Format Check
        run: terraform fmt -check
             
      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate -no-color
              
      - name: Terraform Plan
        run: terraform plan -no-color  -out=tfplan
             
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

      # 5. Build frontend (if Node.js app)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      # 6. Install frontend dependencies

      - name: Install dependencies
        run: npm install

      # 7. Build and export Next.js site
      - name: Build frontend
        run: |
          npm run build

      # 8. Deploy to S3
      - name: Sync build to S3
        run: |
          aws s3 sync out/ s3://$(terraform output -raw frontend_bucket_name) \
            --delete \
            --cache-control "no-cache"

      # 9. Invalidate CloudFront cache
      - name: Invalidate CloudFront cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_ID }} --paths "/*"
        